{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js\";\nimport { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\nconst {\n  Text,\n  Title,\n  Row,\n  Col\n} = Typography;\n\nconst AssessmentPage = props => {\n  const [assessment, setAssessment] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({\n        id: assessmentId\n      });\n      setAssessment(result.data);\n      console.log(assessment);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, assessment ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Assessment Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, assessment.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, assessment.description))), assessment.sections ? assessment.sections.map((_ref, i) => {\n    let {\n      section,\n      tab\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, section.questions ? section.questions.map((_ref2, i) => {\n      let {\n        section,\n        tab\n      } = _ref2;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }\n      }));\n    }) : null);\n  }) : null) : null));\n};\n\nexport default withRouter(AssessmentPage);","map":{"version":3,"sources":["/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js"],"names":["notification","Typography","React","useEffect","useState","getAssessment","Text","Title","Row","Col","AssessmentPage","props","assessment","setAssessment","assessmentId","match","params","id","getAssessmentData","console","log","result","data","error","message","description","display","justifyContent","alignItems","flexDirection","title","sections","map","i","section","tab","questions","withRouter"],"mappings":"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","sourcesContent":["import { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\n\nconst { Text, Title, Row, Col } = Typography;\n\nconst AssessmentPage = (props) => {\n  const [assessment, setAssessment] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({ id: assessmentId });\n      setAssessment(result.data);\n      console.log(assessment);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {assessment ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Title level={2}>Assessment Details</Title>\n            <div>\n              <h1>{assessment.title}</h1>\n              <p>\n                <i>{assessment.description}</i>\n              </p>\n            </div>\n            {assessment.sections\n              ? assessment.sections.map(({ section, tab }, i) => (\n                  <div>\n                    {section.questions\n                      ? section.questions.map(({ section, tab }, i) => (\n                          <div>\n                            <h></h>\n                          </div>\n                        ))\n                      : null}\n                  </div>\n                ))\n              : null}\n            {/* <section className=\"grey-section\">\n              <Row gutter={[16, 16]}>\n                <Col span={6}>\n                  <Text strong>{\"Title\"}</Text>\n                </Col>\n                <Col span={18}>{assessment.title}</Col>\n              </Row>\n              {assessment.sections\n                ? assessment.sections.map(({ section, tab }, i) => (\n                    <Text>{}</Text>\n                  ))\n                : null}\n            </section> */}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(AssessmentPage);\n"]},"metadata":{},"sourceType":"module"}