{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js\";\nimport { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\nconst {\n  Text,\n  Title,\n  Row,\n  Col\n} = Typography;\nconst rowHeaderStyle = {\n  textAlign: \"right\",\n  padding: \"10px\",\n  width: \"210px\"\n};\nconst tableStyle = {\n  fontFamily: \"Montserrat, sans-serif\",\n  fontSize: \"12px\"\n};\n\nconst AssessmentPage = props => {\n  const [assessment, setAssessment] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({\n        id: assessmentId\n      });\n      setAssessment(result.data);\n      console.log(assessment);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, assessment ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Assessment Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, assessment.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, assessment.description))), /*#__PURE__*/React.createElement(\"table\", {\n    style: tableStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, assessment.sections ? assessment.sections.map((section, i) => {\n    var _section$title, _section$description;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, (_section$title = section.title) !== null && _section$title !== void 0 ? _section$title : \"Section \" + (i + 1)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 27\n      }\n    }, (_section$description = section.description) !== null && _section$description !== void 0 ? _section$description : \"\")), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      style: tableStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, section && section.questions ? section.questions.map((question, i) => {\n      var _question$description;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 43\n        }\n      }, \"Question \" + (i + 1) + \": \"), (_question$description = question.description) !== null && _question$description !== void 0 ? _question$description : \"\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 39\n        }\n      }, section && section.questions ? section.questions.map((question, i) => {\n        var _question$description2;\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 51\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 55\n          }\n        }, \"Question \" + (i + 1) + \": \"), (_question$description2 = question.description) !== null && _question$description2 !== void 0 ? _question$description2 : \"\")), /*#__PURE__*/React.createElement(\"ul\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 51\n          }\n        }, /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 53\n          }\n        }, \"Coffee\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 53\n          }\n        }, \"Tea\"), /*#__PURE__*/React.createElement(\"li\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 53\n          }\n        }, \"Milk\")));\n      }) : null, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      }, \"Coffee\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 41\n        }\n      }, \"Tea\"), /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 41\n        }\n      }, \"Milk\")));\n    }) : null))));\n  }) : null))) : null));\n};\n\nexport default withRouter(AssessmentPage);","map":{"version":3,"sources":["/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js"],"names":["notification","Typography","React","useEffect","useState","withRouter","getAssessment","Text","Title","Row","Col","rowHeaderStyle","textAlign","padding","width","tableStyle","fontFamily","fontSize","AssessmentPage","props","assessment","setAssessment","assessmentId","match","params","id","getAssessmentData","console","log","result","data","error","message","description","display","justifyContent","alignItems","flexDirection","title","sections","map","section","i","questions","question"],"mappings":"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","sourcesContent":["import { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\n\nconst { Text, Title, Row, Col } = Typography;\nconst rowHeaderStyle = {\n  textAlign: \"right\",\n  padding: \"10px\",\n  width: \"210px\",\n};\nconst tableStyle = {\n  fontFamily: \"Montserrat, sans-serif\",\n  fontSize: \"12px\",\n};\nconst AssessmentPage = (props) => {\n  const [assessment, setAssessment] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({ id: assessmentId });\n      setAssessment(result.data);\n      console.log(assessment);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {assessment ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Title level={2}>Assessment Details</Title>\n            <div>\n              <h1>{assessment.title}</h1>\n              <p>\n                <i>{assessment.description}</i>\n              </p>\n            </div>\n            <table style={tableStyle}>\n              <tbody>\n                {assessment.sections\n                  ? assessment.sections.map((section, i) => (\n                      <div>\n                        <tr>\n                          <th>{section.title ?? \"Section \" + (i + 1)}</th>\n                          <td>{section.description ?? \"\"}</td>\n                        </tr>\n                        <tr>\n                          <table style={tableStyle}>\n                            <tbody>\n                              {section && section.questions\n                                ? section.questions.map((question, i) => (\n                                    <div>\n                                      <tr>\n                                        <p>\n                                          <b>{\"Question \" + (i + 1) + \": \"}</b>\n                                          {question.description ?? \"\"}\n                                        </p>\n                                      </tr>\n                                      <ul>\n                                        {section && section.questions\n                                          ? section.questions.map(\n                                              (question, i) => (\n                                                <div>\n                                                  <tr>\n                                                    <p>\n                                                      <b>\n                                                        {\"Question \" +\n                                                          (i + 1) +\n                                                          \": \"}\n                                                      </b>\n                                                      {question.description ??\n                                                        \"\"}\n                                                    </p>\n                                                  </tr>\n                                                  <ul>\n                                                    <li>Coffee</li>\n                                                    <li>Tea</li>\n                                                    <li>Milk</li>\n                                                  </ul>\n                                                </div>\n                                              )\n                                            )\n                                          : null}\n                                        <li>Coffee</li>\n                                        <li>Tea</li>\n                                        <li>Milk</li>\n                                      </ul>\n                                    </div>\n                                  ))\n                                : null}\n                            </tbody>\n                          </table>\n                        </tr>\n                      </div>\n                    ))\n                  : null}\n              </tbody>\n            </table>\n            {/* <section className=\"grey-section\">\n              <Row gutter={[16, 16]}>\n                <Col span={6}>\n                  <Text strong>{\"Title\"}</Text>\n                </Col>\n                <Col span={18}>{assessment.title}</Col>\n              </Row>\n              {assessment.sections\n                ? assessment.sections.map(({ section, tab }, i) => (\n                    <Text>{}</Text>\n                  ))\n                : null}\n            </section> */}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(AssessmentPage);\n"]},"metadata":{},"sourceType":"module"}