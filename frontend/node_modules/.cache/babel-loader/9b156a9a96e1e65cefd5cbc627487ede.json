{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Documents/personal-projects/metaschool/frontend/src/components/Image/Image.js\";\nimport React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { isDesktop, minDesktopWidth } from '../../utilities/domHelpers';\nimport './Image.scss';\n\nconst Image = (_ref) => {\n  let {\n    alt,\n    mobileImgData,\n    desktopImgData\n  } = _ref;\n  const className = 'c-Image';\n  const mobileWebpSrc = (mobileImgData === null || mobileImgData === void 0 ? void 0 : mobileImgData.webpSrc) || '';\n  const mobileSrc = (mobileImgData === null || mobileImgData === void 0 ? void 0 : mobileImgData.src) || '';\n  const desktopWebpSrc = (desktopImgData === null || desktopImgData === void 0 ? void 0 : desktopImgData.webpSrc) || mobileWebpSrc || '';\n  const desktopSrc = (desktopImgData === null || desktopImgData === void 0 ? void 0 : desktopImgData.src) || mobileSrc || '';\n  const imgSrc = isDesktop ? desktopSrc : mobileSrc;\n  const minDesktopWidthMedia = `(min-width: ${minDesktopWidth}px)`;\n  const maxDesktopWidthMedia = `(max-width: ${minDesktopWidth}px)`;\n  const mobileMetaData = (mobileImgData === null || mobileImgData === void 0 ? void 0 : mobileImgData.meta) || {};\n  const desktopMetaData = (desktopImgData === null || desktopImgData === void 0 ? void 0 : desktopImgData.meta) || mobileMetaData || {};\n  const metaData = isDesktop ? desktopMetaData : mobileMetaData;\n  const restProps = { ...metaData\n  };\n  if (!imgSrc) return null;\n  return /*#__PURE__*/React.createElement(\"picture\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, mobileWebpSrc && /*#__PURE__*/React.createElement(\"source\", {\n    media: maxDesktopWidthMedia,\n    type: \"image/webp\",\n    srcSet: mobileWebpSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), mobileSrc && /*#__PURE__*/React.createElement(\"source\", {\n    media: maxDesktopWidthMedia,\n    srcSet: mobileSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), desktopWebpSrc && /*#__PURE__*/React.createElement(\"source\", {\n    media: minDesktopWidthMedia,\n    type: \"image/webp\",\n    srcSet: desktopWebpSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), desktopSrc && /*#__PURE__*/React.createElement(\"source\", {\n    media: minDesktopWidthMedia,\n    srcSet: desktopSrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", Object.assign({\n    className: className,\n    src: imgSrc,\n    alt: alt\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport const ImgSrcDataType = {\n  src: PropTypes.string,\n  webpSrc: PropTypes.string\n};\nexport const ImageDataType = {\n  alt: PropTypes.string,\n  mobileImgData: PropTypes.shape(ImgSrcDataType),\n  desktopImgData: PropTypes.shape(ImgSrcDataType)\n};\nImage.propTypes = ImageDataType;\nexport default Image;","map":{"version":3,"sources":["/Users/sara/Documents/personal-projects/metaschool/frontend/src/components/Image/Image.js"],"names":["React","PropTypes","isDesktop","minDesktopWidth","Image","alt","mobileImgData","desktopImgData","className","mobileWebpSrc","webpSrc","mobileSrc","src","desktopWebpSrc","desktopSrc","imgSrc","minDesktopWidthMedia","maxDesktopWidthMedia","mobileMetaData","meta","desktopMetaData","metaData","restProps","ImgSrcDataType","string","ImageDataType","shape","propTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,4BAA3C;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAG,UAA4C;AAAA,MAA3C;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,aAAP;AAAsBC,IAAAA;AAAtB,GAA2C;AACxD,QAAMC,SAAS,GAAG,SAAlB;AAEA,QAAMC,aAAa,GAAG,CAAAH,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEI,OAAf,KAA0B,EAAhD;AACA,QAAMC,SAAS,GAAG,CAAAL,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEM,GAAf,KAAsB,EAAxC;AACA,QAAMC,cAAc,GAAG,CAAAN,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEG,OAAhB,KAA2BD,aAA3B,IAA4C,EAAnE;AACA,QAAMK,UAAU,GAAG,CAAAP,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEK,GAAhB,KAAuBD,SAAvB,IAAoC,EAAvD;AACA,QAAMI,MAAM,GAAGb,SAAS,GAAGY,UAAH,GAAgBH,SAAxC;AACA,QAAMK,oBAAoB,GAAI,eAAcb,eAAgB,KAA5D;AACA,QAAMc,oBAAoB,GAAI,eAAcd,eAAgB,KAA5D;AAEA,QAAMe,cAAc,GAAG,CAAAZ,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEa,IAAf,KAAuB,EAA9C;AACA,QAAMC,eAAe,GAAG,CAAAb,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEY,IAAhB,KAAwBD,cAAxB,IAA0C,EAAlE;AACA,QAAMG,QAAQ,GAAGnB,SAAS,GAAGkB,eAAH,GAAqBF,cAA/C;AAEA,QAAMI,SAAS,GAAG,EAAE,GAAGD;AAAL,GAAlB;AAEA,MAAI,CAACN,MAAL,EAAa,OAAO,IAAP;AAEb,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,aAAa,iBACZ;AACE,IAAA,KAAK,EAAEQ,oBADT;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,MAAM,EAAER,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAQGE,SAAS,iBAAI;AAAQ,IAAA,KAAK,EAAEM,oBAAf;AAAqC,IAAA,MAAM,EAAEN,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARhB,EASGE,cAAc,iBACb;AACE,IAAA,KAAK,EAAEG,oBADT;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,MAAM,EAAEH,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAgBGC,UAAU,iBACT;AAAQ,IAAA,KAAK,EAAEE,oBAAf;AAAqC,IAAA,MAAM,EAAEF,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,eAmBE;AAAK,IAAA,SAAS,EAAEN,SAAhB;AAA2B,IAAA,GAAG,EAAEO,MAAhC;AAAwC,IAAA,GAAG,EAAEV;AAA7C,KAAsDiB,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnBF,CADF;AAuBD,CA1CD;;AA4CA,OAAO,MAAMC,cAAc,GAAG;AAC5BX,EAAAA,GAAG,EAAEX,SAAS,CAACuB,MADa;AAE5Bd,EAAAA,OAAO,EAAET,SAAS,CAACuB;AAFS,CAAvB;AAKP,OAAO,MAAMC,aAAa,GAAG;AAC3BpB,EAAAA,GAAG,EAAEJ,SAAS,CAACuB,MADY;AAE3BlB,EAAAA,aAAa,EAAEL,SAAS,CAACyB,KAAV,CAAgBH,cAAhB,CAFY;AAG3BhB,EAAAA,cAAc,EAAEN,SAAS,CAACyB,KAAV,CAAgBH,cAAhB;AAHW,CAAtB;AAMPnB,KAAK,CAACuB,SAAN,GAAkBF,aAAlB;AAEA,eAAerB,KAAf","sourcesContent":["import React from 'react';\nimport { PropTypes } from 'prop-types';\nimport { isDesktop, minDesktopWidth } from '../../utilities/domHelpers';\nimport './Image.scss';\n\nconst Image = ({ alt, mobileImgData, desktopImgData }) => {\n  const className = 'c-Image';\n\n  const mobileWebpSrc = mobileImgData?.webpSrc || '';\n  const mobileSrc = mobileImgData?.src || '';\n  const desktopWebpSrc = desktopImgData?.webpSrc || mobileWebpSrc || '';\n  const desktopSrc = desktopImgData?.src || mobileSrc || '';\n  const imgSrc = isDesktop ? desktopSrc : mobileSrc;\n  const minDesktopWidthMedia = `(min-width: ${minDesktopWidth}px)`;\n  const maxDesktopWidthMedia = `(max-width: ${minDesktopWidth}px)`;\n\n  const mobileMetaData = mobileImgData?.meta || {};\n  const desktopMetaData = desktopImgData?.meta || mobileMetaData || {};\n  const metaData = isDesktop ? desktopMetaData : mobileMetaData;\n\n  const restProps = { ...metaData };\n\n  if (!imgSrc) return null;\n\n  return (\n    <picture>\n      {mobileWebpSrc && (\n        <source\n          media={maxDesktopWidthMedia}\n          type=\"image/webp\"\n          srcSet={mobileWebpSrc}\n        />\n      )}\n      {mobileSrc && <source media={maxDesktopWidthMedia} srcSet={mobileSrc} />}\n      {desktopWebpSrc && (\n        <source\n          media={minDesktopWidthMedia}\n          type=\"image/webp\"\n          srcSet={desktopWebpSrc}\n        />\n      )}\n      {desktopSrc && (\n        <source media={minDesktopWidthMedia} srcSet={desktopSrc} />\n      )}\n      <img className={className} src={imgSrc} alt={alt} {...restProps} />\n    </picture>\n  );\n};\n\nexport const ImgSrcDataType = {\n  src: PropTypes.string,\n  webpSrc: PropTypes.string,\n};\n\nexport const ImageDataType = {\n  alt: PropTypes.string,\n  mobileImgData: PropTypes.shape(ImgSrcDataType),\n  desktopImgData: PropTypes.shape(ImgSrcDataType),\n};\n\nImage.propTypes = ImageDataType;\n\nexport default Image;\n"]},"metadata":{},"sourceType":"module"}