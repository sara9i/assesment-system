{"ast":null,"code":"import { type } from \"./constants\";\nexport const addSorters = tableData => {\n  return tableData.map(data => {\n    var _data$skipInjectedSor;\n\n    const skipSorter = (_data$skipInjectedSor = data === null || data === void 0 ? void 0 : data.skipInjectedSorter) !== null && _data$skipInjectedSor !== void 0 ? _data$skipInjectedSor : false; //skip adding the below sorter functionality\n\n    if (skipSorter) return data;\n    const dataIndex = data === null || data === void 0 ? void 0 : data.dataIndex;\n    const dataType = data === null || data === void 0 ? void 0 : data.type;\n    const sortDirections = [\"descend\", \"ascend\"];\n    const sorter = dataType === type.NUMBER ? function (a, d) {\n      var _a$dataIndex, _d$dataIndex;\n\n      const numA = (_a$dataIndex = a === null || a === void 0 ? void 0 : a[dataIndex]) !== null && _a$dataIndex !== void 0 ? _a$dataIndex : 0;\n      const numD = (_d$dataIndex = d === null || d === void 0 ? void 0 : d[dataIndex]) !== null && _d$dataIndex !== void 0 ? _d$dataIndex : 0;\n      return numA - numD;\n    } : function (a, d) {\n      var _a$dataIndex$toString, _a$dataIndex2, _d$dataIndex$toString, _d$dataIndex2;\n\n      const strA = (_a$dataIndex$toString = a === null || a === void 0 ? void 0 : (_a$dataIndex2 = a[dataIndex]) === null || _a$dataIndex2 === void 0 ? void 0 : _a$dataIndex2.toString()) !== null && _a$dataIndex$toString !== void 0 ? _a$dataIndex$toString : \"\";\n      const strD = (_d$dataIndex$toString = d === null || d === void 0 ? void 0 : (_d$dataIndex2 = d[dataIndex]) === null || _d$dataIndex2 === void 0 ? void 0 : _d$dataIndex2.toString()) !== null && _d$dataIndex$toString !== void 0 ? _d$dataIndex$toString : \"\";\n      return strA.localeCompare(strD);\n    };\n    return {\n      sorter,\n      sortDirections,\n      ...data\n    };\n  });\n};","map":{"version":3,"sources":["/Users/sara/Documents/personal-projects/metaschool/frontend/src/utilities/formatData.js"],"names":["type","addSorters","tableData","map","data","skipSorter","skipInjectedSorter","dataIndex","dataType","sortDirections","sorter","NUMBER","a","d","numA","numD","strA","toString","strD","localeCompare"],"mappings":"AAAA,SAASA,IAAT,QAAqB,aAArB;AAEA,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAe;AACvC,SAAOA,SAAS,CAACC,GAAV,CAAeC,IAAD,IAAU;AAAA;;AAC7B,UAAMC,UAAU,4BAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEE,kBAAT,yEAA+B,KAA/C,CAD6B,CAG7B;;AACA,QAAID,UAAJ,EAAgB,OAAOD,IAAP;AAEhB,UAAMG,SAAS,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,SAAxB;AACA,UAAMC,QAAQ,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEJ,IAAvB;AACA,UAAMS,cAAc,GAAG,CAAC,SAAD,EAAY,QAAZ,CAAvB;AACA,UAAMC,MAAM,GACVF,QAAQ,KAAKR,IAAI,CAACW,MAAlB,GACI,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAA;;AACd,YAAMC,IAAI,mBAAGF,CAAH,aAAGA,CAAH,uBAAGA,CAAC,CAAGL,SAAH,CAAJ,uDAAqB,CAA/B;AACA,YAAMQ,IAAI,mBAAGF,CAAH,aAAGA,CAAH,uBAAGA,CAAC,CAAGN,SAAH,CAAJ,uDAAqB,CAA/B;AACA,aAAOO,IAAI,GAAGC,IAAd;AACD,KALL,GAMI,UAAUH,CAAV,EAAaC,CAAb,EAAgB;AAAA;;AACd,YAAMG,IAAI,4BAAGJ,CAAH,aAAGA,CAAH,wCAAGA,CAAC,CAAGL,SAAH,CAAJ,kDAAG,cAAgBU,QAAhB,EAAH,yEAAiC,EAA3C;AACA,YAAMC,IAAI,4BAAGL,CAAH,aAAGA,CAAH,wCAAGA,CAAC,CAAGN,SAAH,CAAJ,kDAAG,cAAgBU,QAAhB,EAAH,yEAAiC,EAA3C;AACA,aAAOD,IAAI,CAACG,aAAL,CAAmBD,IAAnB,CAAP;AACD,KAXP;AAaA,WAAO;AACLR,MAAAA,MADK;AAELD,MAAAA,cAFK;AAGL,SAAGL;AAHE,KAAP;AAKD,GA3BM,CAAP;AA4BD,CA7BM","sourcesContent":["import { type } from \"./constants\";\n\nexport const addSorters = (tableData) => {\n  return tableData.map((data) => {\n    const skipSorter = data?.skipInjectedSorter ?? false;\n\n    //skip adding the below sorter functionality\n    if (skipSorter) return data;\n\n    const dataIndex = data?.dataIndex;\n    const dataType = data?.type;\n    const sortDirections = [\"descend\", \"ascend\"];\n    const sorter =\n      dataType === type.NUMBER\n        ? function (a, d) {\n            const numA = a?.[dataIndex] ?? 0;\n            const numD = d?.[dataIndex] ?? 0;\n            return numA - numD;\n          }\n        : function (a, d) {\n            const strA = a?.[dataIndex]?.toString() ?? \"\";\n            const strD = d?.[dataIndex]?.toString() ?? \"\";\n            return strA.localeCompare(strD);\n          };\n\n    return {\n      sorter,\n      sortDirections,\n      ...data,\n    };\n  });\n};\n"]},"metadata":{},"sourceType":"module"}