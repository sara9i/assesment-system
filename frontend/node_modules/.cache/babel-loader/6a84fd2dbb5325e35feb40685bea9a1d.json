{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js\";\nimport { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\nconst {\n  Text,\n  Title,\n  Row,\n  Col\n} = Typography;\nconst tableStyle = {\n  fontFamily: \"Montserrat, sans-serif\",\n  fontSize: \"12px\",\n  width: \"100%\"\n};\n\nconst AssessmentPage = props => {\n  const [assessment, setAssessment] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({\n        id: assessmentId\n      });\n      setAssessment(result.data);\n      console.log(assessment);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, assessment ? /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Assessment Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, assessment.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, assessment.description))), /*#__PURE__*/React.createElement(\"table\", {\n    style: tableStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, assessment.sections ? assessment.sections.map((section, i) => {\n    var _section$title, _section$description;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        border: \"dotted\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 27\n      }\n    }, (_section$title = section.title) !== null && _section$title !== void 0 ? _section$title : \"Section \" + (i + 1)), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    }, (_section$description = section.description) !== null && _section$description !== void 0 ? _section$description : \"\")), /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      style: tableStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }\n    }, section && section.questions ? section.questions.map((question, i) => {\n      var _question$description;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        style: {\n          width: \"100%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }\n      }, \"Question \" + (i + 1) + \": \"), (_question$description = question.description) !== null && _question$description !== void 0 ? _question$description : \"\")), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 39\n        }\n      }, question && question.answers ? question.answers.map((answer, i) => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 51\n        }\n      }, `${answer.description} ${answer.isCorrect ? \"(correct)\" : \"\"}`))) : null));\n    }) : null))));\n  }) : null))) : null));\n};\n\nexport default withRouter(AssessmentPage);","map":{"version":3,"sources":["/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js"],"names":["notification","Typography","React","useEffect","useState","withRouter","getAssessment","Text","Title","Row","Col","tableStyle","fontFamily","fontSize","width","AssessmentPage","props","assessment","setAssessment","assessmentId","match","params","id","getAssessmentData","console","log","result","data","error","message","description","display","justifyContent","alignItems","flexDirection","title","sections","map","section","i","border","questions","question","answers","answer","isCorrect"],"mappings":"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","sourcesContent":["import { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\n\nconst { Text, Title, Row, Col } = Typography;\nconst tableStyle = {\n  fontFamily: \"Montserrat, sans-serif\",\n  fontSize: \"12px\",\n  width: \"100%\",\n};\nconst AssessmentPage = (props) => {\n  const [assessment, setAssessment] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({ id: assessmentId });\n      setAssessment(result.data);\n      console.log(assessment);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        {assessment ? (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n            }}\n          >\n            <Title level={2}>Assessment Details</Title>\n            <div>\n              <h1>{assessment.title}</h1>\n              <p>\n                <i>{assessment.description}</i>\n              </p>\n            </div>\n            <table style={tableStyle}>\n              <tbody>\n                {assessment.sections\n                  ? assessment.sections.map((section, i) => (\n                      <div>\n                        <tr style={{ border: \"dotted\", width: \"100%\" }}>\n                          <th>{section.title ?? \"Section \" + (i + 1)}</th>\n                          <td>{section.description ?? \"\"}</td>\n                        </tr>\n                        <tr style={{ width: \"100%\" }}>\n                          <table style={tableStyle}>\n                            <tbody>\n                              {section && section.questions\n                                ? section.questions.map((question, i) => (\n                                    <div>\n                                      <tr style={{ width: \"100%\" }}>\n                                        <p>\n                                          <b>{\"Question \" + (i + 1) + \": \"}</b>\n                                          {question.description ?? \"\"}\n                                        </p>\n                                      </tr>\n                                      <ul>\n                                        {question && question.answers\n                                          ? question.answers.map(\n                                              (answer, i) => (\n                                                <div>\n                                                  <li>{`${answer.description} ${\n                                                    answer.isCorrect\n                                                      ? \"(correct)\"\n                                                      : \"\"\n                                                  }`}</li>\n                                                </div>\n                                              )\n                                            )\n                                          : null}\n                                      </ul>\n                                    </div>\n                                  ))\n                                : null}\n                            </tbody>\n                          </table>\n                        </tr>\n                      </div>\n                    ))\n                  : null}\n              </tbody>\n            </table>\n            {/* <section className=\"grey-section\">\n              <Row gutter={[16, 16]}>\n                <Col span={6}>\n                  <Text strong>{\"Title\"}</Text>\n                </Col>\n                <Col span={18}>{assessment.title}</Col>\n              </Row>\n              {assessment.sections\n                ? assessment.sections.map(({ section, tab }, i) => (\n                    <Text>{}</Text>\n                  ))\n                : null}\n            </section> */}\n          </div>\n        ) : null}\n      </div>\n    </>\n  );\n};\n\nexport default withRouter(AssessmentPage);\n"]},"metadata":{},"sourceType":"module"}