{"ast":null,"code":"var _jsxFileName = \"/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js\";\nimport { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\nconst {\n  Text,\n  Title\n} = Typography;\n\nconst formatData = data => {\n  const formattedData = {};\n  formattedData.general = [{\n    label: \"Title:\",\n    text: data.title\n  }, {\n    label: \"Description:\",\n    text: data.description\n  }];\n  formattedData.sections = [];\n\n  for (const section of data === null || data === void 0 ? void 0 : data.sections) {\n    for (const question of section === null || section === void 0 ? void 0 : section.questions) {\n      for (const ans of question === null || question === void 0 ? void 0 : question.questions) {}\n    }\n  }\n\n  return formattedData;\n};\n\nconst AssessmentPage = props => {\n  const [assessment, setAssessment] = useState(null);\n  const [formattedData, setFormattedData] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({\n        id: assessmentId\n      });\n      setAssessment(result.data);\n      console.log(assessment);\n      let data = formatData(result.data);\n      console.log(\"data: \", data);\n      setFormattedData(data);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    level: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Assessment Details.\"), assessment ? /*#__PURE__*/React.createElement(\"section\", {\n    className: \"grey-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, assessment.title), assessment.sections ? assessment.sections.map((_ref, i) => {\n    let {\n      section,\n      tab\n    } = _ref;\n    return /*#__PURE__*/React.createElement(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    });\n  }) : null) : null));\n};\n\nexport default withRouter(AssessmentPage);","map":{"version":3,"sources":["/Users/sara/Documents/personal-projects/metaschool/frontend/src/pages/Assessments/AssessmentPage/AssessmentPage.js"],"names":["notification","Typography","React","useEffect","useState","withRouter","getAssessment","Text","Title","formatData","data","formattedData","general","label","text","title","description","sections","section","question","questions","ans","AssessmentPage","props","assessment","setAssessment","setFormattedData","assessmentId","match","params","id","getAssessmentData","console","log","result","error","message","map","i","tab"],"mappings":"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","sourcesContent":["import { notification, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../components/Common/Form.css\";\nimport { getAssessment } from \"../../../services/assessmentService\";\n\nconst { Text, Title } = Typography;\n\nconst formatData = (data) => {\n  const formattedData = {};\n\n  formattedData.general = [\n    {\n      label: \"Title:\",\n      text: data.title,\n    },\n    {\n      label: \"Description:\",\n      text: data.description,\n    },\n  ];\n  formattedData.sections = [];\n  for (const section of data?.sections) {\n    for (const question of section?.questions) {\n      for (const ans of question?.questions) {\n      }\n    }\n  }\n  return formattedData;\n};\n\nconst AssessmentPage = (props) => {\n  const [assessment, setAssessment] = useState(null);\n  const [formattedData, setFormattedData] = useState({});\n  const assessmentId = props.match.params.id;\n\n  const getAssessmentData = async () => {\n    try {\n      console.log(\"getting data\");\n      const result = await getAssessment({ id: assessmentId });\n      setAssessment(result.data);\n      console.log(assessment);\n      let data = formatData(result.data);\n      console.log(\"data: \", data);\n      setFormattedData(data);\n    } catch (error) {\n      notification[\"error\"]({\n        message: \"Error\",\n        description: `Error: ${error.message}`,\n      });\n    }\n  };\n\n  useEffect(() => {\n    getAssessmentData();\n  }, []);\n  return (\n    <>\n      <section>\n        <Title level={2}>Assessment Details.</Title>\n        {assessment ? (\n          <section className=\"grey-section\">\n            <Text>{assessment.title}</Text>\n            {assessment.sections\n              ? assessment.sections.map(({ section, tab }, i) => (\n                  <Text>{}</Text>\n                ))\n              : null}\n          </section>\n        ) : null}\n      </section>\n    </>\n  );\n};\n\nexport default withRouter(AssessmentPage);\n"]},"metadata":{},"sourceType":"module"}